name: Twilio CI

# Trigger the workflow on pushes to main and dev branches
on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Dynamically set the environment based on the branch
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      # 1. Checkout the repository
      - uses: actions/checkout@v2

      # 2. Set up Node.js environment
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # 3. Cache Node.js modules to speed up workflow
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install dependencies using npm ci
      - name: Install dependencies for the Twilio function
        run: npm ci

      # 5. Install Twilio CLI and Deploy
      - name: Install Twilio CLI and Deploy
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_API_KEY: ${{ secrets.TWILIO_API_KEY }}
          TWILIO_API_SECRET: ${{ secrets.TWILIO_API_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SUPABASE_API_KEY: ${{ secrets.SUPABASE_API_KEY }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}
          TWILIO_NUMBER: ${{ secrets.TWILIO_NUMBER }}
          QUEUE_NAME: ${{ secrets.QUEUE_NAME }}
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
          SUMMARY_SERVICE_SID: ${{ secrets.SUMMARY_SERVICE_SID }}
          FALLBACK_NUMBER: ${{ secrets.FALLBACK_NUMBER }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          DEVELOPER_SUPPORT_NUMBER: ${{ secrets.DEVELOPER_SUPPORT_NUMBER }}
          ENV: ${{ secrets.ENV }}
        run: |
          # Install Twilio CLI globally
          npm install twilio-cli -g
          
          # Install the serverless plugin for Twilio CLI
          twilio plugins:install @twilio-labs/plugin-serverless
          
          # Determine the branch and set the deployment environment
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            DEPLOY_ENV=prod
          elif [ "${GITHUB_REF}" == "refs/heads/dev" ]; then
            DEPLOY_ENV=dev
          else
            echo "Branch not recognized for deployment."
            exit 1
          fi
          
          echo "Deploying to $DEPLOY_ENV environment."
          
          # Deploy to the determined environment
          twilio serverless:deploy \
            --service-name=inventerra \
            --environment=$DEPLOY_ENV \
            --override-existing-service